{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"An AWS CFT template for creating 3 vThunder instances each having 3 interfaces attached.",
  "Parameters":{
    "Zone":{
      "Type":"AWS::EC2::AvailabilityZone::Name",
      "MinLength":"1",
      "MaxLength":"64",
      "AllowedPattern":"[-_ a-zA-Z0-9]*",
      "ConstraintDescription":"supports only alphanumeric characters, spaces, dashes and underscores",
      "Description":"Choose from the existing availability zones. AWS offers a range of options for managing availability and resiliency for your applications. Architect your solution to use replicated VMs in Availability Zones to protect your apps and data from datacenter outages and maintenance events."

    },
    "KeyPair":{
      "Type":"AWS::EC2::KeyPair::KeyName",
      "MinLength":"1",
      "MaxLength":"64",
      "AllowedPattern":"[-_ a-zA-Z0-9]*",
      "Description":"Choose keypair from the available keypair. A key pair,consisting of a public key and a private key, is a set of security credentials that you use to prove your identity when connecting to an Amazon EC2 instance."   },

    "AMIID":{
      "Type": "String",
      "MinLength":"1",
      "MaxLength":"64",
      "AllowedPattern":"[-_ a-zA-Z0-9]*",
      "Default"       : "ami-0c6f62bbb84e4dea0",
      "Description":"Specify from available AMI ID for a10 thunder instance. A10 Thunder ADC for Advanced Load Balancing - BYOL is set as a default AMI ID for us-east-1 region. Find more type of thunder images available with different capacity under respective regions. Go to aws -> ec2 -> launch instance -> Application and OS Images (Amazon Machine Image) -> search for acos vthunder -> AWS marketplace AMIs -> select the relevant thunder image -> click on continue -> copy AMI ID."
    },
    "EC2Instance" : {
      "Type"          : "String",
      "Default"       : "m4.xlarge",
	  "AllowedValues" : ["c4.xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "c5d.large",
        "c5d.9xlarge",
        "c5d.2xlarge",
        "c5d.4xlarge",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "i3.large",
        "i3.xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "m5d.large",
        "m5d.xlarge",
        "m5d.2xlarge",
        "m5d.4xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "r5d.large",
        "r5d.xlarge",
        "r5d.2xlarge",
        "r5d.4xlarge",
        "r5.large",
        "r5.xlarge",
        "r5.2xlarge",
        "r5.4xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "t3.medium",
        "t3.large",
        "t3.xlarge",
        "t3.2xlarge",
        "z1d.large",
        "z1d.xlarge",
        "z1d.2xlarge",
        "z1d.3xlarge",
        "z1d.6xlarge"
      ],
     "ConstraintDescription" : "must be a valid EC2 instance type.",
      "Description"   :"Choose from available instance/compute type supported for vThunder. Default instance type is m4.xlarge which contains 4 vCPU and 64 GiB memory.vThunder requires a minimum of 4 vCPUs , 16 GiB of memory and support of 2 NICs attachment.For more information check AWS marketplace product pricing section. In case required instance type is not available in the list, it can be added in the script. Go to aws -> ec2 -> launch instance -> Find and copy relevant instance type."
    },
    "Tenancy" : {
      "Type"        : "String",
      "MinLength"   : "7",
      "MaxLength"   : "9",
      "Default"     : "default",
      "AllowedValues" : ["default", "dedicated"],
      "ConstraintDescription" : "must be default or dedicated",
      "Description" : "Select from the available Tenancy. Tenancy defines how EC2 instances are distributed across physical hardware and affects pricing. Specifies if the Amazon EC2 instance is hosted on shared or single-tenant hardware."
    },
    "VPCID": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "Choose the available Virtual Private Network ID where to configure vThunder. This CFT template will not create a new Virtual Private Network."
    },
    "SubnetMgmtID": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "Choose the available subnet Id for managing vThunder and this subnet should be available within a selected Virtual Private Network. This CFT template will not create a new subnet."
    },
    "SubnetDataINID": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "Choose the available subnet Id for data traffic flow inward to vThunder and this subnet should be available within a selected Virtual Private Network. This CFT template will not create a new subnet."
    },
    "SubnetDataOutID": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "Choose the available subnet Id for data traffic flow outward to vThunder and this subnet should be available within a selected Virtual Private Network. This CFT template will not create a new subnet."
    },

    "IPThunder1" : {
      "Type"        : "String",
      "Default"     : "10.2.2.117",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "Must be a valid IP address.",
      "Description": "Specify Primary private IP from data-in subnet. This CFT template will not create a new Primary private IP address for virtual machine 1. For eg vth-inst1-data-ip"
    },
    "IPThunder2" : {
      "Type"        : "String",
      "Default"     : "10.2.2.118",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "Must be a valid IP address.",
      "Description": "Specify Primary private IP from data-in subnet. This CFT template will not create a new Primary private IP address for virtual machine 1. For eg vth-inst1-data-ip"
    },
    "IPThunder3" : {
      "Type"        : "String",
      "Default"     : "10.2.2.119",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "Must be a valid IP address.",
      "Description": "Specify Primary private IP from data-in subnet. This CFT template will not create a new Primary private IP address for virtual machine 1. For eg vth-inst1-data-ip"
    },
    "VIPThunder1" : {
      "Type"        : "String",
      "Default"     : "10.2.2.121",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "Must be a valid IP address.",
      "Description": "Specify Virtual private IP from data-in subnet. This CFT template will not create a new Virtual private IP address for virtual machine 1."
    },
    "VIPThunder2" : {
      "Type"        : "String",
      "Default"     : "10.2.2.123",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "Must be a valid IP address.",
      "Description": "Specify Virtual private IP from data-in subnet. This CFT template will not create a new Virtual private IP address for virtual machine 1."

    },
    "VIPThunder3" : {
      "Type"        : "String",
      "Default"     : "10.2.2.124",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "Must be a valid IP address.",
      "Description": "Specify Virtual private IP from data-in subnet. This CFT template will not create a new Virtual private IP address for virtual machine 1."
    },
    "CustomTagName" : {
      "Type" : "String",
      "Default" : "name",
      "Description": "Specify the custom tag name. Custom tag key which will be added to all resources created via CFT. Tags are used to track the cost of resources in AWS Cost Explorer."
    },
    "CustomTagValue" : {
      "Type" : "String",
      "Default" : "a10-vthunder-adc",
      "Description":"Specify the custom tag value. Custom tag key value which will be added to all resources created via CFT. Tags are used to track the cost of resources in AWS Cost Explorer."

    },
    "SecurityGroupMgmt": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "Choose the available security group ID within a selected Virtual Private Network. This CFT template will not create a new security group."
    },
    "SecurityGroupData": {
      "Type": "AWS::EC2::SecurityGroup::Id",
      "Description": "Choose the available security group ID within a selected Virtual Private Network. This CFT template will not create a new security group."    },
    "AllocationIdEIPThunderInstance12": {
      "Type": "String",
      "Description": "Specify the available elastic IP allocation ID. This CFT template will not create a new Elastic Public IP.Go to aws -> ec2 -> Elastic IPs -> Choose the IP and then in summary copy Allocation ID."
    },
    "AllocationIdEIPThunderInstance21": {
      "Type": "String",
      "Description": "Specify the available elastic IP allocation ID. This CFT template will not create a new Elastic Public IP. Go to aws -> ec2 -> Elastic IPs -> Choose the IP and then in summary copy Allocation ID."
    },
    "AllocationIdEIPThunderInstance22": {
      "Type": "String",
      "Description": "Specify the available elastic IP allocation ID. This CFT template will not create a new Elastic Public IP. Go to aws -> ec2 -> Elastic IPs -> Choose the IP and then in summary copy Allocation ID."
    },
    "AllocationIdEIPThunderInstance32": {
      "Type": "String",
      "Description": "Specify the available elastic IP allocation ID. This CFT template will not create a new Elastic Public IP. Go to aws -> ec2 -> Elastic IPs -> Choose the IP and then in summary copy Allocation ID."
    },
    "AllocationIdEIPThunderInstance31": {
      "Type": "String",
      "Description": "Specify the available elastic IP allocation ID. This CFT template will not create a new Elastic Public IP. Go to aws -> ec2 -> Elastic IPs -> Choose the IP and then in summary copy Allocation ID."
    },
    "AllocationIdEIPThunderInstance11": {
      "Type": "String",
      "Description": "Specify the available elastic IP allocation ID. This CFT template will not create a new Elastic Public IP. Go to aws -> ec2 -> Elastic IPs -> Choose the IP and then in summary copy Allocation ID."
    }
  },
  "Mappings" : {
    "InstanceType2Arch" : {
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.xlarge":    { "Arch" : "HVM64"  },
      "c4.4xlarge":   { "Arch" : "HVM64"  },
      "c4.8xlarge":   { "Arch" : "HVM64"  },
      "d2.xlarge":    { "Arch" : "HVM64"  },
      "d2.2xlarge":   { "Arch" : "HVM64"  },
      "d2.4xlarge":   { "Arch" : "HVM64"  },
      "d2.8xlarge":   { "Arch" : "HVM64"  },
      "m4.2xlarge":   { "Arch" : "HVM64"  },
      "m4.4xlarge":   { "Arch" : "HVM64"  },
      "m4.10xlarge":  { "Arch" : "HVM64"  },
      "i2.xlarge":    { "Arch" : "HVM64"  },
      "i2.2xlarge":   { "Arch" : "HVM64"  },
      "i2.4xlarge":   { "Arch" : "HVM64"  },
      "i2.8xlarge":   { "Arch" : "HVM64"  },
      "c5d.large":    { "Arch" : "HVM64"  },
      "c5d.9xlarge":  { "Arch" : "HVM64"  },
      "c5d.2xlarge":  { "Arch" : "HVM64"  },
      "c5d.4xlarge":  { "Arch" : "HVM64"  },
      "c5.xlarge":    { "Arch" : "HVM64"  },
      "c5.2xlarge":   { "Arch" : "HVM64"  },
      "c5.4xlarge":   { "Arch" : "HVM64"  },
      "c5.9xlarge":   { "Arch" : "HVM64"  },
      "g3.4xlarge":   { "Arch" : "HVM64"  },
      "g3.8xlarge":   { "Arch" : "HVM64"  },
      "i3.large":     { "Arch" : "HVM64"  },
      "i3.xlarge":    { "Arch" : "HVM64"  },
      "i3.2xlarge":   { "Arch" : "HVM64"  },
      "i3.4xlarge":   { "Arch" : "HVM64"  },
      "i3.8xlarge":   { "Arch" : "HVM64"  },
      "m5d.large":    { "Arch" : "HVM64"  },
      "m5d.xlarge":   { "Arch" : "HVM64"  },
      "m5d.2xlarge":  { "Arch" : "HVM64"  },
      "m5d.4xlarge":  { "Arch" : "HVM64"  },
      "m5.large":     { "Arch" : "HVM64"  },
      "m5.xlarge":    { "Arch" : "HVM64"  },
      "m5.2xlarge":   { "Arch" : "HVM64"  },
      "m5.4xlarge":   { "Arch" : "HVM64"  },
      "r5d.large":    { "Arch" : "HVM64"  },
      "r5d.xlarge":   { "Arch" : "HVM64"  },
      "r5d.2xlarge":  { "Arch" : "HVM64"  },
      "r5d.4xlarge":  { "Arch" : "HVM64"  },
      "r5.large":     { "Arch" : "HVM64"  },
      "r5.xlarge":    { "Arch" : "HVM64"  },
      "r5.2xlarge":   { "Arch" : "HVM64"  },
      "r5.4xlarge":   { "Arch" : "HVM64"  },
      "r4.large":     { "Arch" : "HVM64"  },
      "r4.xlarge":    { "Arch" : "HVM64"  },
      "r4.2xlarge":   { "Arch" : "HVM64"  },
      "r4.4xlarge":   { "Arch" : "HVM64"  },
      "r4.8xlarge":   { "Arch" : "HVM64"  },
      "t3.medium":    { "Arch" : "HVM64"  },
      "t3.large":     { "Arch" : "HVM64"  },
      "t3.xlarge":    { "Arch" : "HVM64"  },
      "t3.2xlarge":   { "Arch" : "HVM64"  },
      "z1d.large":    { "Arch" : "HVM64"  },
      "z1d.xlarge":   { "Arch" : "HVM64"  },
      "z1d.2xlarge":  { "Arch" : "HVM64"  },
      "z1d.3xlarge":  { "Arch" : "HVM64"  },
      "z1d.6xlarge":  { "Arch" : "HVM64"  }
    }

  },
  "Resources": {
    "MgmtNetworkInterfaceInstance1" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetMgmtID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupMgmt" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst1-mgmt-nic1" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "ClientNetworkInterfaceInstance1" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetDataINID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupData" } ],
        "PrivateIpAddresses" :[{
          "Primary" :true ,
          "PrivateIpAddress" :{"Ref" : "IPThunder1"}
        },{
          "Primary" : false,
          "PrivateIpAddress" : {"Ref" : "VIPThunder1"}
        }],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst1-data-nic1" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "ServerNetworkInterfaceInstance1" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetDataOutID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupData" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst1-data-nic2" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "MgmtNetworkInterfaceInstance2" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetMgmtID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupMgmt" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst2-mgmt-nic1" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "ClientNetworkInterfaceInstance2" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetDataINID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupData" } ],
        "PrivateIpAddresses" :[{
          "Primary" :true ,
          "PrivateIpAddress" :{"Ref" : "IPThunder2"}
        },{
          "Primary" : false,
          "PrivateIpAddress" : {"Ref" : "VIPThunder2"}
        }

        ],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst2-data-nic1" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "ServerNetworkInterfaceInstance2" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetDataOutID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupData" } ],
        "SecondaryPrivateIpAddressCount" : 1,
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst2-data-nic2" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "MgmtNetworkInterfaceInstance3" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetMgmtID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupMgmt" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst3-mgmt-nic1" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "ClientNetworkInterfaceInstance3" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetDataINID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupData" } ],
        "PrivateIpAddresses" :[{
          "Primary" :true ,
          "PrivateIpAddress" :{"Ref" : "IPThunder3"}
        },{
          "Primary" : false,
          "PrivateIpAddress" : {"Ref" : "VIPThunder3"}
        }

        ],
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst3-data-nic1" }},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "ServerNetworkInterfaceInstance3" : {
      "Type" : "AWS::EC2::NetworkInterface",
      "Properties" : {
        "Description" : "Private network interface",
        "SubnetId" : { "Ref" : "SubnetDataOutID" },
        "GroupSet" : [ { "Ref" : "SecurityGroupData" } ],
        "SecondaryPrivateIpAddressCount" : 1,
        "Tags" : [
          { "Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst3-data-nic2"} },
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ]
      }
    },
    "vThunderInstance1" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : [ "MgmtNetworkInterfaceInstance1","ClientNetworkInterfaceInstance1","ServerNetworkInterfaceInstance1"],
      "Properties" : {
     
        "InstanceType" : { "Ref" : "EC2Instance" },
        "AvailabilityZone" : { "Ref" : "Zone" },
        "ImageId" : {"Ref" : "AMIID"},
        "Tags" : [

          {"Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst1"}},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ],

        "NetworkInterfaces" : [
          { "DeviceIndex" : "0",
            "NetworkInterfaceId" : {"Ref" : "MgmtNetworkInterfaceInstance1"}
          },

          { "DeviceIndex" : "1",
            "NetworkInterfaceId" : {"Ref" : "ClientNetworkInterfaceInstance1"}
          },
          { "DeviceIndex" : "2",
            "NetworkInterfaceId" : {"Ref" : "ServerNetworkInterfaceInstance1"}
          }
        ],

        "KeyName" : { "Ref" : "KeyPair" },
        "Tenancy" : { "Ref" : "Tenancy" }


      }
    },
    "vThunderInstance2" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : [ "MgmtNetworkInterfaceInstance2","ClientNetworkInterfaceInstance2","ServerNetworkInterfaceInstance2"],
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2Instance" },
        "AvailabilityZone" : { "Ref" : "Zone" },
        "ImageId" : {"Ref" : "AMIID"},
        "Tags" : [

          {"Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst2"}},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ],

        "NetworkInterfaces" : [
          { "DeviceIndex" : "0",
            "NetworkInterfaceId" : {"Ref" : "MgmtNetworkInterfaceInstance2"}
          },

          { "DeviceIndex" : "1",
            "NetworkInterfaceId" : {"Ref" : "ClientNetworkInterfaceInstance2"}
          },
          { "DeviceIndex" : "2",
            "NetworkInterfaceId" : {"Ref" : "ServerNetworkInterfaceInstance2"}
          }
        ],

        "KeyName" : { "Ref" : "KeyPair" },
        "Tenancy" : { "Ref" : "Tenancy" }
      }
    },
    "vThunderInstance3" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : [ "MgmtNetworkInterfaceInstance3","ClientNetworkInterfaceInstance3","ServerNetworkInterfaceInstance3"],
      "Properties" : {
        "InstanceType" : { "Ref" : "EC2Instance" },
        "AvailabilityZone" : { "Ref" : "Zone" },
        "ImageId" : {"Ref" : "AMIID"},
        "Tags" : [

          {"Key" : "Name", "Value" : {"Fn::Sub":"${AWS::StackName}-inst3"}},
          {"Key" : {
            "Ref" : "CustomTagName"
          },
            "Value": {
              "Ref" : "CustomTagValue"
            }
          }
        ],

        "NetworkInterfaces" : [
          { "DeviceIndex" : "0",
            "NetworkInterfaceId" : {"Ref" : "MgmtNetworkInterfaceInstance3"}
          },

          { "DeviceIndex" : "1",
            "NetworkInterfaceId" : {"Ref" : "ClientNetworkInterfaceInstance3"}
          },
          { "DeviceIndex" : "2",
            "NetworkInterfaceId" : {"Ref" : "ServerNetworkInterfaceInstance3"}
          }
        ],

        "KeyName" : { "Ref" : "KeyPair" },
        "Tenancy" : { "Ref" : "Tenancy" }
      }
    },

    "AssociatePublicIpvThunderInstance11" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Ref" : "AllocationIdEIPThunderInstance11" },
        "NetworkInterfaceId" : { "Ref" : "MgmtNetworkInterfaceInstance1" }
      }},

    "AssociatePublicIpvThunderInstance12" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Ref" : "AllocationIdEIPThunderInstance12" },
        "NetworkInterfaceId" : { "Ref" : "ClientNetworkInterfaceInstance1" },
        "PrivateIpAddress": {"Ref" : "VIPThunder1"}
      }},

    "AssociatePublicIpvThunderInstance21" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" :{ "Ref" : "AllocationIdEIPThunderInstance21" },
        "NetworkInterfaceId" : { "Ref" : "MgmtNetworkInterfaceInstance2" }
      }},

    "AssociatePublicIpvThunderInstance22" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Ref" : "AllocationIdEIPThunderInstance22" },
        "NetworkInterfaceId" : { "Ref" : "ClientNetworkInterfaceInstance2" },
        "PrivateIpAddress": {"Ref" : "VIPThunder2"}
      }},
    "AssociatePublicIpvThunderInstance31" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" :{ "Ref" : "AllocationIdEIPThunderInstance31" },
        "NetworkInterfaceId" : { "Ref" : "MgmtNetworkInterfaceInstance3" }
      }},

    "AssociatePublicIpvThunderInstance32" : {
      "Type" : "AWS::EC2::EIPAssociation",
      "Properties" : {
        "AllocationId" : { "Ref" : "AllocationIdEIPThunderInstance32" },
        "NetworkInterfaceId" : { "Ref" : "ClientNetworkInterfaceInstance3" },
        "PrivateIpAddress": {"Ref" : "VIPThunder3"}
      }}
  }}
